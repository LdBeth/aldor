
###############################################################################
#
# Makefile to build an Aldor distribution on Windows with gcc (Cygwin/MinGW)
#
# Laurentiu Dragan, Aldor.org, Nov 2006
#  ldragan@aldor.org
#
###############################################################################

SHELL=/bin/sh
MAKEFILE=Makefile.win32

# Set this variables according to your environment

# ALDOR_PROJECT is the directory that contains the
# Aldor source tree. 
ALDOR_PROJECT=$(realpath .)

# All these things under $(ALDOR_PROJECT) can actually be in unrelated places,
# and don't need to be under any common parent directory.
#ALDOR_SRC=$(ALDOR_PROJECT)/aldor
ALDOR_INSTALL=$(ALDOR_PROJECT)/install/aldor
GENERIC_DIR=$(ALDOR_PROJECT)/install/aldor_generic

ALDOR_VERSION=1.1.0
MACHINE=win32gcc
LIBS_TO_BUILD=axllib aldor #algebra
# LIBS_TO_BUILD=aldor axllib debuglib

GmpDir=/usr

LIBALDORROOT=$(ALDOR_PROJECT)/lib/aldor
ALDORLIBROOT=$(LIBALDORROOT)
ALGEBRAROOT=$(ALDOR_PROJECT)/lib/algebra

ALDORROOT=$(ALDOR_INSTALL)/$(MACHINE)/$(ALDOR_VERSION)
PATH:=$(PATH):$(ALDORROOT)/bin:$(ALDORROOT)/toolbin

# DO NOT TOUCH THE FOLLOWING PART
export SHELL
export ALDOR_INSTALL
export GENERIC_DIR
export ALDOR_VERSION
export MACHINE
export LIBS_TO_BUILD
export ALDORLIBROOT LIBALDORROOT ALGEBRAROOT
export GmpDir
export ALDORROOT PATH

export COMPILER


all:
	@echo $(PATH)
	@echo "Usage:"
	@echo "   make aldorcompiler => make the compiler and install it"
	@echo "   make generic       => make the generic directory containing platform-independent libs and sources for the tests"
	@echo "   make cleanforest   => clean the source directories"
	@echo "   make testaxl       => tests aldor compiler using axllib tests"
	@echo "   make distrib       => make the whole distribution"
	@echo "Modify Makefile.globals for setup."

# ----------------------------------------------------
# COMPILER
# ----------------------------------------------------

#aldorcompiler: clean cleangeneric init
aldorcompiler: init
	@(cd aldor; $(MAKE) -f$(MAKEFILE) compiler)

# ----------------------------------------------------
# GENERIC AND DOCUMENTATION
# ----------------------------------------------------

generic: initgeneric genericlibs utilities
	@cp README $(GENERIC_DIR)

genericlibs:
	@(cd lib; $(MAKE) generic)

utilities:
	@(PATH=$(ALDORROOT)/bin:$(PATH); export PATH; cd utils; $(MAKE) install)

preparedistrib: docpdf gentest copysrc

# ----------------------------------------------------------
# Copy sources that should be provided in the distribution.
# ----------------------------------------------------------

copysrc: srclibaldor

srclibaldor:
	mkdir -p $(GENERIC_DIR)/src
	cp -r $(ALDORLIBROOT)/src $(GENERIC_DIR)/src/libaldor
	for i in `find $(GENERIC_DIR)/src/libaldor -name CVS`; do rm -rf $$i; done 

# ----------------------------------------------------
# Documentation pdf of libraries and user guide.
# ----------------------------------------------------

docpdf: libaldordocpdf algebradocpdf aldorugpdf

libaldordocpdf: checklibaldor cleanlibaldordoc
	@(PATH=$(ALDORROOT)/bin:$(PATH); export PATH; \
	  cd $(ALDORLIBROOT)/src; $(MAKE) -f$(MAKEFILE) doc; \
	  cd $(ALDORLIBROOT)/doc/tex; $(MAKE) -f$(MAKEFILE) pdf; \
	  cd $(ALDORLIBROOT); $(MAKE) -f$(MAKEFILE) buildtutorial; \
	  mkdir -p $(GENERIC_DIR)/doc/libaldor; \
	  mkdir -p $(GENERIC_DIR)/doc/libaldor/tutorial; \
	  cp $(ALDORLIBROOT)/doc/libaldor.pdf $(GENERIC_DIR)/doc/libaldor; \
	  cp $(ALDORLIBROOT)/tutorial/*.as $(GENERIC_DIR)/doc/libaldor/tutorial; \
	  chmod a-x $(ALDORLIBROOT)/tutorial/*.as; \
	  cp $(ALDORLIBROOT)/tutorial/tutorial.pdf $(GENERIC_DIR)/doc/libaldor/tutorial)

# had to copy aldoc.cls and ttyverb.sty from libaldor dir
algebradocpdf: checklibaldor checkalgebra cleanalgebradoc
	@(PATH=$(ALDORROOT)/bin:$(PATH); export PATH; \
	  cd $(ALDORLIBROOT)/src; $(MAKE) -f$(MAKEFILE) doc; \
	  cd $(ALGEBRAROOT)/src; $(MAKE) -f$(MAKEFILE) ALGEBRAROOT=$(ALGEBRAROOT) doc; \
	  cd $(ALGEBRAROOT)/doc/tex; $(MAKE) -f$(MAKEFILE) ALDORLIBROOT=$(ALDORLIBROOT) ALGEBRAROOT=$(ALGEBRAROOT) pdf; \
	  mkdir -p $(GENERIC_DIR)/doc/algebra; \
	  cp $(ALGEBRAROOT)/doc/algebra.pdf $(GENERIC_DIR)/doc/algebra)

aldorugpdf:
	@(PATH=$(ALDORROOT)/bin:$(PATH); export PATH; \
	  cd aldorug; $(MAKE) -f$(MAKEFILE) aldorug.pdf; \
	  mkdir -p $(GENERIC_DIR)/doc/aldorug; \
	  cp aldorug.pdf $(GENERIC_DIR)/doc/aldorug)

# ----------------------------------------------------
# Documentation (ps and pdf) of libaldor and algebra libraries.
# ----------------------------------------------------
#rhx: If a path in TEXINPUTS ends in two / signs then latex looks down
# all subdirectories for input/style files. The program aldoc2html
# does not follow that rule but instead puts '\input FILENAME' into
# the file so that latex2html must interpret it.
documentation: libaldordoc algebradoc

cleanlibaldordoc: checklibaldor
	cd $(ALDORLIBROOT)/doc/tex; $(MAKE) -f$(MAKEFILE) clean

libaldordoc: checklibaldor
	cd $(ALDORLIBROOT)/src; $(MAKE) -f$(MAKEFILE) doc
	cd $(ALDORLIBROOT)/doc/tex; $(MAKE) -f$(MAKEFILE) ps pdf html

cleanalgebradoc: checkalgebra
	cd $(ALGEBRAROOT)/doc/tex; $(MAKE) -f$(MAKEFILE) ALDORLIBROOT=$(ALDORLIBROOT) clean

algebradoc: checklibaldor checkalgebra
	cd $(ALDORLIBROOT)/src; $(MAKE) -f$(MAKEFILE) doc
# We need to 'make doc' in ALGEBRAROOT as well don't we?
	cd $(ALGEBRAROOT)/doc/tex; $(MAKE) -f$(MAKEFILE) ALDORLIBROOT=$(ALDORLIBROOT) prepare ps pdf html

# ------------------------------------------------------------
# Generating the tests for the aldor and algebra libraries ...
# ------------------------------------------------------------
gentest: gentestaldor gentestalgebra


gentestaldor:
	@(PATH=$(ALDORROOT)/bin:$(PATH); export PATH; \
	  cd $(ALDORLIBROOT)/src; $(MAKE) -f$(MAKEFILE) test)
	@(PATH=$(ALDORROOT)/bin:$(PATH); export PATH; \
	  utils/removezerosized.sh $(ALDORLIBROOT)/test; \
	  mkdir -p $(GENERIC_DIR)/tests/libaldor; \
	  cp $(ALDORLIBROOT)/test/*.as $(GENERIC_DIR)/tests/libaldor; \
	  cp $(ALDORLIBROOT)/test/testall $(GENERIC_DIR)/tests/libaldor; \
	  cp $(ALDORLIBROOT)/test/Makefile $(GENERIC_DIR)/tests/libaldor)

gentestalgebra:
	@(PATH=$(ALDORROOT)/bin:$(PATH); export PATH; \
	  cd $(ALGEBRAROOT); $(MAKE) -f$(MAKEFILE) testfiles; \
	  mkdir -p $(GENERIC_DIR)/tests/algebra; \
	  cp $(ALGEBRAROOT)/test/*.as $(GENERIC_DIR)/tests/algebra; \
	  cp $(ALGEBRAROOT)/test/testall $(GENERIC_DIR)/tests/algebra; \
	  cp $(ALGEBRAROOT)/test/Makefile $(GENERIC_DIR)/tests/algebra)

# ----------------------------------------------------
# Testing the aldor and algebra libraries ...
# ----------------------------------------------------
#rhx: Here we assume that "make install" has been performed.
# Run the testsuite for aldor and algebra. Note that axllib has no
# testsuite.
test: testaldor testalgebra

testaldor:
	cd $(ALDORLIBROOT); $(MAKE) -f$(MAKEFILE) runtest

testalgebra:
	cd $(ALGEBRAROOT);  $(MAKE) -f$(MAKEFILE) testfiles runtest


# ----------------------------------------------------
# SPECIFIC LIBRARIES
# ----------------------------------------------------

libaxllib: checklibaxllib
	@(cd $(LIBAXLLIBROOT); $(MAKE) -f$(MAKEFILE) library)

checklibaxllib:
	-@ if [ "x$(LIBAXLLIBROOT)" = "x" ] ; then echo "*** LIBAXLLIBROOT is not set"; fi
	@ [ "x$(LIBAXLLIBROOT)" != "x" ]

libaldor: checklibaldor
	@(cd $(ALDORLIBROOT); $(MAKE) -f$(MAKEFILE) library)

checklibaldor:
	-@ if [ "x$(ALDORLIBROOT)" = "x" ] ; then echo "*** ALDORLIBROOT is not set"; fi
	@ [ "x$(ALDORLIBROOT)" != "x" ]

algebra: checklibaldor checkalgebra
	@(cd $(ALGEBRAROOT); $(MAKE) -f$(MAKEFILE) library)

checkalgebra:
	-@ if [ "x$(ALGEBRAROOT)" = "x" ] ; then echo "*** ALGEBRAROOT is not set"; fi
	@ [ "x$(ALGEBRAROOT)" != "x" ]


# ----------------------------------------------------
# CLEANING TARGETS
# ----------------------------------------------------

cleanall: clean cleangeneric


clean: cleancompiler cleanlibs
	@echo "Cleaning done."

cleancompiler:
	@(cd aldor; $(MAKE) -f$(MAKEFILE) remove)

#cleandoc:
#	@(cd aldorug; $(MAKE) -f$(MAKEFILE) clean)

cleanlibs:
	@(cd lib; $(MAKE) -f$(MAKEFILE) cleansources)

cleangeneric:
	@(/bin/rm -rf $(GENERIC_DIR))

cleanforest:
	@(echo "Cleaning compiler sources"; cd aldor; $(MAKE) -f$(MAKEFILE) cleansources; cd ..; \
	  echo "Cleaning libraries sources"; cd lib; $(MAKE) -f$(MAKEFILE) cleansources; cd ..)

# ----------------------------------------------------
# INITIALIZATION
# ----------------------------------------------------

init:
	@(mkdir -p $(ALDOR_INSTALL)/$(MACHINE)/$(ALDOR_VERSION); \
	  echo "Initialization done.")

initgeneric:
	@mkdir -p $(GENERIC_DIR)
	@mkdir -p $(GENERIC_DIR)/lib
	@mkdir -p $(GENERIC_DIR)/doc
	@mkdir -p $(GENERIC_DIR)/tests
	@mkdir -p $(GENERIC_DIR)/utils
	@cp Makefile.generic $(GENERIC_DIR)/Makefile
	@cp Makefile.globals $(GENERIC_DIR)/Makefile.globals

# ----------------------------------------------------

# ----------------------------------------------------
# DISTRIB
# ----------------------------------------------------

distrib: aldorcompiler generic
	(cd $(GENERIC_DIR); $(MAKE) install)

installer: # distrib
	(cd aldor/tools/win32; $(MAKE) -f packager.mak)

# ----------------------------------------------------
# DISTRIB
# ----------------------------------------------------

fast: 
	(cd aldor; $(MAKE) -f$(MAKEFILE) fast)
