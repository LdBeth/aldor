{\codeline{1}\verb& #include "aldor"&}\\
{\codeline{2}\verb& #include "aldorio"&}\\
{\codeline{3}\verb&&}\\
{\codeline{4}\verb& MI ==> MachineInteger;&}\\
{\codeline{5}\verb& F  ==> DoubleFloat;&}\\
{\codeline{6}\verb&&}\\
{\codeline{7}\verb& step(n: MachineInteger)(a: F, b: F): Generator F == generate {&}\\
{\codeline{8}\verb&     m: MachineInteger := prev(n);&}\\
{\codeline{9}\verb&     del: F := (b - a)/m::F;&}\\
{\codeline{10}\verb&     for i in 1..n repeat {&}\\
{\codeline{11}\verb&         yield a;&}\\
{\codeline{12}\verb&         a := a + del;&}\\
{\codeline{13}\verb&     }&}\\
{\codeline{14}\verb& }&}\\
{\codeline{15}\verb&&}\\
{\codeline{16}\verb& default minR, maxR, minI, maxI: F;&}\\
{\codeline{17}\verb& default numR, numI, maxIters:   MI;&}\\
{\codeline{18}\verb& default drawPt: (r: MI, i: MI, n: MI) -> ();&}\\
{\codeline{19}\verb&&}\\
{\codeline{20}\verb& drawMand(minR, maxR, numR, minI, maxI, numI, drawPt, maxIters): () == {&}\\
{\codeline{21}\verb&&}\\
{\codeline{22}\verb&     mandel(cr: F, ci: F): MI == {&}\\
{\codeline{23}\verb&        zr: F := 0;&}\\
{\codeline{24}\verb&        zi: F := 0;&}\\
{\codeline{25}\verb&        n: MI := 0;&}\\
{\codeline{26}\verb&        while (zr*zr + zi*zi) < 4.0 for free n in 1..maxIters repeat {&}\\
{\codeline{27}\verb&           zr := zr*zr -zi*zi + cr;&}\\
{\codeline{28}\verb&           zi := 2.0*zi*zr + ci;&}\\
{\codeline{29}\verb&        }&}\\
{\codeline{30}\verb&        return n;&}\\
{\codeline{31}\verb&     }&}\\
{\codeline{32}\verb&&}\\
{\codeline{33}\verb&     for i in step(numI)(minI, maxI) for ic in 1..numI repeat&}\\
{\codeline{34}\verb&       for r in step(numR)(minR, maxR) for rc in 1..numR repeat&}\\
{\codeline{35}\verb&         drawPt(rc, ic, mandel(r,i));&}\\
{\codeline{36}\verb& }&}\\
{\codeline{37}\verb&&}\\
{\codeline{38}\verb& import from F;&}\\
{\codeline{39}\verb& maxN: MI == 100;&}\\
{\codeline{40}\verb& maxX: MI == 25;&}\\
{\codeline{41}\verb& maxY: MI == 25;&}\\
{\codeline{42}\verb&&}\\
{\codeline{43}\verb& drawPoint(x: MI, y: MI, n: MI): () =={&}\\
{\codeline{44}\verb&   if      n = maxN then stdout << "   ";&}\\
{\codeline{45}\verb&   else if n < 10   then stdout << "  " << n;&}\\
{\codeline{46}\verb&   else                  stdout << " "  << n;&}\\
{\codeline{47}\verb&   if x = maxX then stdout << newline;&}\\
{\codeline{48}\verb& }&}\\
{\codeline{49}\verb&&}\\
{\codeline{50}\verb& drawMand(-2.0, -1.0, maxX, -0.5, 0.5, maxY, drawPoint, maxN);&}\\
{\codeline{51}\verb&&}\\
