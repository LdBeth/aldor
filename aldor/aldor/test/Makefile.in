# ..From autoconf
@SET_MAKE@

VPATH = @srcdir@
abs_top_builddir = @abs_top_builddir@
srcdir = @srcdir@
top_builddir = @top_builddir@
builddir = @builddir@
abs_top_srcdir = @abs_top_srcdir@
subdir = aldor/test

all: really-all

.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ '; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ ;; \
	esac;

aldorsrcdir = $(abs_top_srcdir)/aldor/src
aldorexedir = $(abs_top_builddir)/aldor/src
aldortooldir = $(abs_top_builddir)/aldor/subcmd/unitools
foamsrclibdir = $(abs_top_srcdir)/aldor/lib/libfoamlib
foamlibdir = $(abs_top_builddir)/aldor/lib/libfoamlib
foamsrcdir = $(abs_top_srcdir)/aldor/lib/libfoam
foamdir = $(abs_top_builddir)/aldor/lib/libfoam

aptests := exquo
fmtests := L1 clos strtable1
ctests  := 
otests  := 

badtests := opt1
# opt1 fails because the optimise decides to inline the recursive call
# (it shouldn't, but spotting the call is a bit tricky).

opt1_AXLFLAGS=-Y$(foamdir)/al -I $(foamsrcdir) -lRuntimeLib=foam -Q9 -Qinline-all
strtable1_AXLFLAGS=-Y$(foamdir)/al -I $(foamsrcdir) -lRuntimeLib=foam -Q9 -Qinline-all

clos_AXLFLAGS := -Q2

_aptests := $(sort $(aptests))
_aotests := $(sort $(fmtests) $(ctests))
_fmtests := $(sort $(fmtests))
_ctests  := $(sort $(ctests) $(otests))
_otests  := $(sort $(otests))

nfile := -Nfile=$(aldorsrcdir)/aldor.conf

$(patsubst %, out/fm/%.fm, $(_fmtests)): out/fm/%.fm: out/ao/%.ao
	mkdir -p $$(dirname $@)
	$(aldorexedir)/aldor $(nfile) -Ffm=$(builddir)/$@ $<

$(patsubst %, out/c/%.c, $(_ctests)): out/c/%.c: out/ao/%.ao
	mkdir -p $$(dirname $@)
	$(aldorexedir)/aldor $(nfile) -Fc=$(builddir)/$@ $<

# Create .o files locally as unicl creates files in the
# current directory...
$(patsubst %, %.o, $(_otests)): %.o: out/ao/%.ao
	mkdir -p $$(dirname $@)
	$(aldorexedir)/aldor $(nfile) 	\
			      -Ccc=$(aldortooldir)/unicl	\
			      -Cargs="-Wconfig=$(aldorsrcdir)/aldor.conf -I$(aldorsrcdir)" \
			      -Fo=$(builddir)/$@ $<

$(patsubst %, out/ap/%.ap, $(_aptests)): out/ap/%.ap: $(srcdir)/%.as
	mkdir -p $$(dirname $@)
	$(aldorexedir)/aldor $(nfile) -I$(foamsrclibdir) \
			      -Fap=$(builddir)/$@ $<

define aldor_args
	$(nfile) 		\
	-Y$(foamlibdir)/al	\
	-I$(foamsrclibdir)	\
	-lAxlLib=foamlib 		\
	$(AXLFLAGS) $($*_AXLFLAGS)	\
	-Fao=out/ao/$*.ao $(srcdir)/$*.as
endef

$(patsubst %, out/ap/%.ap, $(_aotests)): out/ap/%.ap: %.as
	mkdir -p $$(dirname $@)
	$(aldorexedir)/aldor $(nfile) -Fap=$@ $(srcdir)/$*.as

$(patsubst %, out/ao/%.ao, $(_aotests)): out/ao/%.ao: %.as
	mkdir -p $$(dirname $@)
	$(aldorexedir)/aldor $($*_opts) $(aldor_args)

$(patsubst %, out/ao/%.cmd, $(_aotests)): out/ao/%.cmd: %.as
	mkdir -p $$(dirname $@)
	echo run '$(aldor_args)' > $@

really-all: \
     $(patsubst %,out/ap/%.ap,$(_aptests)) \
     $(patsubst %,out/ao/%.cmd,$(_aotests)) \
     $(patsubst %,out/fm/%.fm,$(fmtests)) \
     $(patsubst %,out/c/%.c,$(ctests)) \
     $(patsubst %,%.o,$(otests))      

.PHONY: all

# 
# :: Automake requires this little lot
#
mostlyclean: 

clean: mostlyclean
distclean: clean 
	rm Makefile
maintainer-clean: distclean


EMPTY_AUTOMAKE_TARGETS  = dvi pdf ps info html tags ctags
EMPTY_AUTOMAKE_TARGETS += install install-data install-exec uninstall
EMPTY_AUTOMAKE_TARGETS += install-dvi install-html install-info install-ps install-pdf
EMPTY_AUTOMAKE_TARGETS += installdirs
EMPTY_AUTOMAKE_TARGETS += check installcheck

.PHONY: $(EMPTY_AUTOMAKE_TARGETS)
$(EMPTY_AUTOMAKE_TARGETS):
