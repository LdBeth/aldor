# ..From autoconf
@SET_MAKE@

VPATH = @srcdir@
abs_top_builddir = @abs_top_builddir@
srcdir = @srcdir@
top_builddir = @top_builddir@
builddir = @builddir@
abs_top_srcdir = @abs_top_srcdir@
subdir = lib/axllib/src/al

default: all

# Check the makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ '; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ ;; \
	esac;


# Build starts here
aldorsrcdir = $(abs_top_srcdir)/aldor/src
aldorexedir = $(abs_top_builddir)/aldor/src
libname = axllib

library= lang machine basic axlcat tuple gener axl_boolean segment		\
	 sinteger integer bpower sfloat axl_float dfloat pointer axl_char	\
	 parray array list langx string oslow fname file format		\
	 textwrit textread opsys partial complex imod ratio rtexns	\
	 table except fprint fmtout pfloat object efuns ieeectl sort	\
	 axl_byte

noclass = sfloat oslow file format dfloat rtexns textread axl_float table fprint fmtout

lang_deps    :=
machine_deps := lang
basic_deps   := lang machine
axlcat_deps := basic
tuple_deps   := axlcat
gener_deps   := axlcat
axl_boolean_deps    := axlcat
segment_deps := axlcat axl_boolean
sinteger_deps := axlcat segment
integer_deps := axlcat segment sinteger
bpower_deps   := sinteger
axl_char_deps := axlcat
string_deps   := axlcat axl_char array
sfloat_deps   := integer string bpower
dfloat_deps   := integer string bpower sfloat
format_deps   := axlcat sinteger sfloat dfloat
fprint_deps  := axlcat integer string
axl_float_deps   := integer string bpower format except fprint
pfloat_deps   := integer string bpower format except fprint sfloat
pointer_deps  := axlcat
parray_deps   := axlcat sinteger
array_deps    := axlcat tuple sinteger parray 
list_deps     := axlcat tuple segment sinteger pointer 
langx_deps    := axlcat tuple sinteger list 
oslow_deps    := axlcat parray pointer string
fname_deps    := axlcat parray string oslow
file_deps     := axlcat fname
opsys_deps    := axlcat oslow file
textwrit_deps := axlcat fname file array opsys
textread_deps := axlcat fname file array opsys axl_char
partial_deps  := axlcat pointer
rtexns_deps   := langx textwrit
ratio_deps    := integer bpower
complex_deps  := integer bpower
imod_deps     := integer bpower
table_deps    := sinteger array list sfloat
except_deps   := axlcat
fmtout_deps   := textwrit
object_deps   := axlcat
complex_deps  := axlcat integer bpower
efuns_deps    := dfloat complex except
ieeectl_deps  := efuns
except_deps   := axlcat
sort_deps     := axlcat list
axl_byte_deps     := axlcat

aldorexedir=$(abs_top_builddir)/aldor/src

$(patsubst %, %.c, $(library)): %.c: %.ao %.dep
	@echo AO_TO_C $*
	@$(aldorexedir)/aldor -Nfile=$(aldorsrcdir)/aldor.conf -Fc=$(builddir)/$@ $<	

aldoropt := -Q8 -Qinline-all
define aldor_args
	-I$(srcdir)/.. $(aldoropt) $(aldordebug_$*) \
	-Nfile=$(aldorsrcdir)/aldor.conf 	\
	-lAxlLib=$(libname)_$* 		\
	-Fao=$*.ao $(srcdir)/../$*.as
endef

$(patsubst %,%.ao,$(library)): $(aldorexedir)/aldor
$(patsubst %, %.ao, $(library)): %.ao: $(srcdir)/../../include/axllib.as
$(patsubst %, %.ao, $(library)): %.ao: $(srcdir)/../%.as
$(patsubst %, %.ao, $(library)): %.ao: 
	@echo AO $*
	@rm -f lib$(libname)_$*.al;	rm -f $*.c; rm -f $*.ao;		\
	 ar r lib$(libname)_$*.al Makefile;					\
	 for i in $$(cat $*.dep); do ar r lib$(libname)_$*.al $$i.ao; done; 	\
	 $(aldorexedir)/aldor $(aldor_args)

$(patsubst %, %.cmd, $(library)): %.cmd: Makefile
	echo "run $(aldor_args)" > $@

define dep_template
$(1).ao: $(1).dep $$(patsubst %,%.ao,$$($(1)_deps))
$(1).dep: $$(patsubst %,%.dep,$$($(1)_deps))
endef

$(patsubst %,%.dep,$(library) lib$(libname)): $(srcdir)/Makefile.in
	@echo DEP $(patsubst %.dep,%,$@)
	@echo > $@.tmp
	@for i in $(filter %.dep, $^); \
	do d=$$(basename $$i .dep); \
	   cat $$i >> $@.tmp; echo $(basename $$d .dep)>> $@.tmp;  \
	done
	@if [ -f $@ ] && diff $@ $@.tmp > /dev/null; then rm $@.tmp; else mv $@.tmp $@; fi


$(foreach l,$(library), $(eval $(call dep_template,$(l))))

$(patsubst %,%.fm,$(library)): %.fm: %.ao 
	@echo AO_TO_FM $*
	@$(aldorexedir)/aldor \
		     -Nfile=$(aldorsrcdir)/aldor.conf 	\
		     -Ffm=$@ $*.ao

all: Makefile \
	$(patsubst %, %.c,  $(library)) 	\
	$(patsubst %, %.fm, $(library))		\
	lib$(libname).al 			

lib$(libname).dep: $(patsubst %,%.dep,$(library))
lib$(libname).al: $(patsubst %,%.dep, $(library))
lib$(libname).al: $(patsubst %,%.ao, $(library))
lib$(libname).al: lib$(libname).dep
	@echo LIB $(patsubst %.al, %, $@)
	@rm -f lib$(libname).al
	@for i in $$(cat lib$(libname).dep); do ar r lib$(libname).al $$i.ao; done

# 
# :: Automake requires this little lot
#
mostlyclean: 
	rm -f $(patsubst %, %.c, $(library))
	rm -f $(patsubst %, %.ao, $(library))
	rm -f $(patsubst %, %.fm, $(library))
	rm -f $(patsubst %, %.dep, $(library))
	rm -f $(patsubst %, %.dep.tmp, $(library))
	rm -f $(patsubst %, lib$(libname)_%.al, $(library))

clean: mostlyclean
distclean: clean 
	rm Makefile
maintainer-clean: distclean


EMPTY_AUTOMAKE_TARGETS  = dvi pdf ps info html tags ctags
EMPTY_AUTOMAKE_TARGETS += install install-data install-exec uninstall
EMPTY_AUTOMAKE_TARGETS += install-dvi install-html install-info install-ps install-pdf
EMPTY_AUTOMAKE_TARGETS += installdirs
EMPTY_AUTOMAKE_TARGETS += check installcheck

.PHONY: $(EMPTY_AUTOMAKE_TARGETS)
$(EMPTY_AUTOMAKE_TARGETS):
